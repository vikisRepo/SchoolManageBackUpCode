// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMS.Models;

namespace SMS.Migrations
{
    [DbContext(typeof(SchoolManagementContext))]
    [Migration("20210203224917_AddressUpd")]
    partial class AddressUpd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SMS.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SMS.Models.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DesignationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DesignationId");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("SMS.Models.EmployeementStatus", b =>
                {
                    b.Property<int>("EmployeementStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeementStatusId");

                    b.ToTable("EmployeementStatuses");
                });

            modelBuilder.Entity("SMS.Models.Function", b =>
                {
                    b.Property<int>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Decription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentFunctionId")
                        .HasColumnType("int");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("SMS.Models.Languages", b =>
                {
                    b.Property<int>("LanguagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LanguageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguagesId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("SMS.Models.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NationalityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("SMS.Models.Religion", b =>
                {
                    b.Property<int>("ReligionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ReligionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReligionId");

                    b.ToTable("Religions");
                });

            modelBuilder.Entity("SMS.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SMS.Models.RoleFunction", b =>
                {
                    b.Property<int>("RoleFunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RoleFunctionId");

                    b.HasIndex(new[] { "FunctionId" }, "IX_RoleFunctions_FunctionId");

                    b.HasIndex(new[] { "RoleId" }, "IX_RoleFunctions_RoleId");

                    b.ToTable("RoleFunctions");
                });

            modelBuilder.Entity("SMS.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActiveId")
                        .HasColumnType("int");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankIfscCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeementStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Epfnumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EPFNumber");

                    b.Property<string>("Esinumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESINumber");

                    b.Property<string>("FatherMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LanguagesId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marritalsatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Mobile")
                        .HasColumnType("bigint");

                    b.Property<string>("MotherMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotherTongue")
                        .HasColumnType("int");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("OfficialEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePic")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ReligionId")
                        .HasColumnType("int");

                    b.Property<int>("ReportingTo")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SalutationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffAddressId")
                        .HasColumnType("int");

                    b.Property<int>("StaffExperienceId")
                        .HasColumnType("int");

                    b.Property<int>("StaffTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffUserCredStaffId")
                        .HasColumnType("int");

                    b.Property<string>("TeacherId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uannumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UANNumber");

                    b.Property<DateTime>("WeddingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StaffId");

                    b.HasIndex("StaffUserCredStaffId");

                    b.HasIndex(new[] { "DepartmentId" }, "IX_Staffs_DepartmentId");

                    b.HasIndex(new[] { "DesignationId" }, "IX_Staffs_DesignationId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("SMS.Models.StaffAddress", b =>
                {
                    b.Property<int>("StaffAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("StaffAddressId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffAddress");
                });

            modelBuilder.Entity("SMS.Models.StaffExperience", b =>
                {
                    b.Property<int>("StaffExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime2");

                    b.Property<string>("Responsibilty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("StaffExperienceId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffExperiences");
                });

            modelBuilder.Entity("SMS.Models.StaffType", b =>
                {
                    b.Property<int>("StaffTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffTypeId");

                    b.ToTable("StaffTypes");
                });

            modelBuilder.Entity("SMS.Models.StaffUserCred", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("StaffUserCreds");
                });

            modelBuilder.Entity("SMS.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("Aadhar")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AcademicPrecentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AdmissionNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("BirthCertificate")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersAadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FathersAnnualIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("FathersCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianAadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LegalGaurdianAnnualIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("LegalGaurdianCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianSalary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianAadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocalGaurdianAnnualIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("LocalGaurdianCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianSalary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Mobile")
                        .HasColumnType("bigint");

                    b.Property<string>("MotherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersAadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MothersAnnualIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("MothersCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Passport")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ProfilePic")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("RationCard")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ReasonForLeaving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("RollNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentUserCredStudentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("StudentVisa")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("TransferCertificate")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("passingOutSchool")
                        .HasColumnType("int");

                    b.Property<int?>("schoolBrand")
                        .HasColumnType("int");

                    b.Property<string>("schoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("yearofattendence")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("StudentUserCredStudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SMS.Models.StudentAddress", b =>
                {
                    b.Property<int>("StudentAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentAddressId");

                    b.HasIndex("StudentId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("SMS.Models.StudentUserCred", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentUserCreds");
                });

            modelBuilder.Entity("SMS.Models.RoleFunction", b =>
                {
                    b.HasOne("SMS.Models.Function", "Function")
                        .WithMany("RoleFunctions")
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMS.Models.Role", "Role")
                        .WithMany("RoleFunctions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SMS.Models.Staff", b =>
                {
                    b.HasOne("SMS.Models.StaffUserCred", "StaffUserCred")
                        .WithMany("Staff")
                        .HasForeignKey("StaffUserCredStaffId");

                    b.Navigation("StaffUserCred");
                });

            modelBuilder.Entity("SMS.Models.StaffAddress", b =>
                {
                    b.HasOne("SMS.Models.Staff", null)
                        .WithMany("Addresses")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SMS.Models.StaffExperience", b =>
                {
                    b.HasOne("SMS.Models.Staff", null)
                        .WithMany("Experience")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SMS.Models.Student", b =>
                {
                    b.HasOne("SMS.Models.StudentUserCred", "StudentUserCred")
                        .WithMany("Student")
                        .HasForeignKey("StudentUserCredStudentId");

                    b.Navigation("StudentUserCred");
                });

            modelBuilder.Entity("SMS.Models.StudentAddress", b =>
                {
                    b.HasOne("SMS.Models.Student", null)
                        .WithMany("Addresses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SMS.Models.Function", b =>
                {
                    b.Navigation("RoleFunctions");
                });

            modelBuilder.Entity("SMS.Models.Role", b =>
                {
                    b.Navigation("RoleFunctions");
                });

            modelBuilder.Entity("SMS.Models.Staff", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("SMS.Models.StaffUserCred", b =>
                {
                    b.Navigation("Staff");
                });

            modelBuilder.Entity("SMS.Models.Student", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("SMS.Models.StudentUserCred", b =>
                {
                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
